{"version":3,"sources":["models/Movie.js","services/moviesService.js","components/MovieItem.jsx","components/MovieEditor.jsx","components/MoviesOverview.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Movie","id","title","year","runtime","genre","director","poster","Object","classCallCheck","this","createClass","key","value","clean","replace","low","toLowerCase","trim","nice","toTitleCase","console","log","str","txt","charAt","toUpperCase","substr","baseApi","MoviesService","_getMovies","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","movieTasks","fullMovies","result","wrap","_context","prev","next","concat","axios","sent","data","Search","map","movie","getMovieDetails","imdbID","Promise","all","count","totalResults","movies","abrupt","stop","apply","arguments","_getMovieDetails","_callee2","_context2","Title","Year","Runtime","Genre","Director","Poster","_x","MovieItem","_React$Component","_getPrototypeOf2","_this","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","handleDelete","props","handleEdit","inherits","react_default","createElement","className","src","alt","niceTitle","onClick","React","Component","MovieEditor","state","handleFieldChange","fieldName","event","objectSpread","target","setState","onMovieChange","htmlFor","type","placeholder","onChange","MoviesOverview","movieToDelete","movieToEdit","editedMovie","getMovieById","resetMovieToDelete","resetMovieToEdit","deleteSelectedMovie","filter","t","handleMovieChange","saveMovie","_this$state$editedMov","handleAdd","newMovie","ulid","push","_componentDidMount","_ref","getMovies","find","_this2","_this$state","MovieItem_MovieItem","aria-label","MovieEditor_MovieEditor","App","MoviesOverview_MoviesOverview","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sSAAaA,EAAb,WACE,SAAAA,EAAYC,EAAIC,EAAOC,EAAMC,EAASC,EAAOC,EAAUC,GAASC,OAAAC,EAAA,EAAAD,CAAAE,KAAAV,GAC9DU,KAAKT,GAAKA,EACVS,KAAKR,MAAQA,EACbQ,KAAKP,KAAOA,EACZO,KAAKN,QAAUA,EACfM,KAAKL,MAAQA,EACbK,KAAKJ,SAAWA,EAChBI,KAAKH,OAASA,EARlB,OAAAC,OAAAG,EAAA,EAAAH,CAAAR,EAAA,EAAAY,IAAA,YAAAC,MAAA,WAaI,IAAMC,EAAQJ,KAAKR,MAAMa,QAAQ,kBAAmB,IAC9CC,EAAMF,EAAMG,cAAcC,OAC1BC,EAAOT,KAAKU,YAAYJ,GAG9B,OADAK,QAAQC,IAAI,CAAEpB,MAAOQ,KAAKR,MAAOY,QAAOE,MAAKG,SACtCA,IAlBX,CAAAP,IAAA,cAAAC,MAAA,SAqBcU,GACV,OAAOA,EAAIR,QAAQ,SAAU,SAAUS,GACrC,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGV,oBAvBzDjB,EAAA,GCGM4B,EAAU,0BAGHC,EAAb,oBAAAA,IAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,GAAA,OAAArB,OAAAG,EAAA,EAAAH,CAAAqB,EAAA,OAAAjB,IAAA,YAAAC,MAAA,eAAAiB,EAAAtB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aAEwB,MACdR,EAHV,GAAAS,OAGmBjB,EAHnB,YAAAiB,OAFY,WAEZ,OAAAA,OAEwB,OAFxBH,EAAAE,KAAA,EAI2BE,IAAMV,GAJjC,cAIUC,EAJVK,EAAAK,KAMUT,EAAaD,EAASW,KAAKC,OAAOC,IAAI,SAAAC,GAAK,OAC/CtB,EAAcuB,gBAAgBD,EAAME,UAP1CX,EAAAE,KAAA,EAS6BU,QAAQC,IAAIjB,GATzC,cASUC,EATVG,EAAAK,KAWUP,EAAS,CACbgB,MAAOnB,EAASW,KAAKS,aACrBC,OAAQnB,GAbdG,EAAAiB,OAAA,SAgBWnB,GAhBX,yBAAAE,EAAAkB,SAAAzB,MAAA,yBAAAL,EAAA+B,MAAAnD,KAAAoD,YAAA,KAAAlD,IAAA,kBAAAC,MAAA,eAAAkD,EAAAvD,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAC,EAAAC,KAAA,SAAA8B,EAmB+B/D,GAnB/B,IAAAmC,EAAAC,EAAA,OAAAL,EAAAC,EAAAQ,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAoBUR,EApBV,GAAAS,OAoBmBjB,EApBnB,YAAAiB,OAFY,WAEZ,OAAAA,OAoBiD5C,GApBjDgE,EAAArB,KAAA,EAqB2BE,IAAMV,GArBjC,cAqBUC,EArBV4B,EAAAlB,KAAAkB,EAAAN,OAAA,SAsBW,IAAI3D,EACTqC,EAASW,KAAKK,OACdhB,EAASW,KAAKkB,MACd7B,EAASW,KAAKmB,KACd9B,EAASW,KAAKoB,QACd/B,EAASW,KAAKqB,MACdhC,EAASW,KAAKsB,SACdjC,EAASW,KAAKuB,SA7BpB,wBAAAN,EAAAL,SAAAI,MAAA,gBAAAQ,GAAA,OAAAT,EAAAF,MAAAnD,KAAAoD,YAAA,MAAAjC,EAAA,GCDa4C,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAApE,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,GAAA,QAAAI,EAAAf,UAAAgB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnB,UAAAmB,GAAA,OAAAL,EAAApE,OAAA0E,EAAA,EAAA1E,CAAAE,MAAAiE,EAAAnE,OAAA2E,EAAA,EAAA3E,CAAAiE,IAAAW,KAAAvB,MAAAc,EAAA,CAAAjE,MAAAmC,OAAAkC,MACEM,aAAe,WAAM,IACXlC,EAAUyB,EAAKU,MAAfnC,MACRyB,EAAKU,MAAMD,aAAalC,EAAMlD,KAHlC2E,EAMEW,WAAa,WAAM,IACTpC,EAAUyB,EAAKU,MAAfnC,MACRyB,EAAKU,MAAMC,WAAWpC,EAAMlD,KARhC2E,EAAA,OAAApE,OAAAgF,EAAA,EAAAhF,CAAAiE,EAAAC,GAAAlE,OAAAG,EAAA,EAAAH,CAAAiE,EAAA,EAAA7D,IAAA,SAAAC,MAAA,WAWW,IACCsC,EAAUzC,KAAK4E,MAAfnC,MACR,OACEsC,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,yBACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,QACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,cACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,iBACbF,EAAAxD,EAAAyD,cAAA,OAAKE,IAAKzC,EAAM5C,QApB5B,8DAoBsDsF,IAAI,YAGlDJ,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,gBACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,iBACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,cAAcxC,EAAM2C,aACnCL,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,iBAAiBxC,EAAM7C,UACtCmF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,iBAAiBxC,EAAMhD,QAG1CsF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,eACbF,EAAAxD,EAAAyD,cAAA,QAAMC,UAAU,OAAOI,QAASrF,KAAK6E,YACnCE,EAAAxD,EAAAyD,cAAA,KAAGC,UAAU,iBAEfF,EAAAxD,EAAAyD,cAAA,QAAMC,UAAU,OAAOI,QAASrF,KAAK2E,cACnCI,EAAAxD,EAAAyD,cAAA,KAAGC,UAAU,yBAjC3BlB,EAAA,CAA+BuB,IAAMC,mBCHxBC,EAAb,SAAAxB,GAAA,SAAAwB,IAAA,IAAAvB,EAAAC,EAAApE,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,GAAA,QAAArB,EAAAf,UAAAgB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnB,UAAAmB,GAAA,OAAAL,EAAApE,OAAA0E,EAAA,EAAA1E,CAAAE,MAAAiE,EAAAnE,OAAA2E,EAAA,EAAA3E,CAAA0F,IAAAd,KAAAvB,MAAAc,EAAA,CAAAjE,MAAAmC,OAAAkC,MACEoB,MAAQ,CACNhD,MAAO,IAFXyB,EAOEwB,kBAAoB,SAAAC,GAAS,OAAI,SAAAC,GAC/B,IAAMnD,EAAK3C,OAAA+F,EAAA,EAAA/F,CAAA,GAAQoE,EAAKuB,MAAMhD,OAC9BA,EAAMkD,GAAaC,EAAME,OAAO3F,MAChC+D,EAAK6B,SAAS,CAAEtD,UAChByB,EAAKU,MAAMoB,cAAcvD,KAX7ByB,EAAA,OAAApE,OAAAgF,EAAA,EAAAhF,CAAA0F,EAAAxB,GAAAlE,OAAAG,EAAA,EAAAH,CAAA0F,EAAA,EAAAtF,IAAA,oBAAAC,MAAA,WAKIH,KAAK+F,SAAS,CAAEtD,MAAM3C,OAAA+F,EAAA,EAAA/F,CAAA,GAAME,KAAK4E,MAAMnC,WAL3C,CAAAvC,IAAA,SAAAC,MAAA,WAcW,IACCsC,EAAUzC,KAAKyF,MAAfhD,MACR,OACEsC,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,MAAIC,UAAU,SAAd,sBACAF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,SACbF,EAAAxD,EAAAyD,cAAA,SAAOiB,QAAQ,GAAGhB,UAAU,SAA5B,SAGAF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,WACbF,EAAAxD,EAAAyD,cAAA,YAEAD,EAAAxD,EAAAyD,cAAA,SACEC,UAAU,QACViB,KAAK,OACLC,YAAY,QACZhG,MAAOsC,EAAMjD,MACb4G,SAAUpG,KAAK0F,kBAAkB,aAMvCX,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,SACbF,EAAAxD,EAAAyD,cAAA,SAAOiB,QAAQ,GAAGhB,UAAU,SAA5B,YAGAF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,WACbF,EAAAxD,EAAAyD,cAAA,SACEC,UAAU,QACViB,KAAK,OACLC,YAAY,WACZhG,MAAOsC,EAAM7C,SACbwG,SAAUpG,KAAK0F,kBAAkB,gBAIvCX,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,SACbF,EAAAxD,EAAAyD,cAAA,SAAOiB,QAAQ,GAAGhB,UAAU,SAA5B,QAGAF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,WACbF,EAAAxD,EAAAyD,cAAA,SACEC,UAAU,QACViB,KAAK,OACLC,YAAY,OACZhG,MAAOsC,EAAMhD,KACb2G,SAAUpG,KAAK0F,kBAAkB,YAIvCX,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,SACbF,EAAAxD,EAAAyD,cAAA,SAAOiB,QAAQ,GAAGhB,UAAU,SAA5B,SAGAF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,WACbF,EAAAxD,EAAAyD,cAAA,SACEC,UAAU,QACViB,KAAK,OACLC,YAAY,QACZhG,MAAOsC,EAAM9C,MACbyG,SAAUpG,KAAK0F,kBAAkB,aAIvCX,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,SACbF,EAAAxD,EAAAyD,cAAA,SAAOiB,QAAQ,GAAGhB,UAAU,SAA5B,WAGAF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,WACbF,EAAAxD,EAAAyD,cAAA,SACEC,UAAU,QACViB,KAAK,OACLC,YAAY,UACZhG,MAAOsC,EAAM/C,QACb0G,SAAUpG,KAAK0F,kBAAkB,oBAzF/CF,EAAA,CAAiCF,IAAMC,mBCK1Bc,EAAb,SAAArC,GAAA,SAAAqC,IAAA,IAAApC,EAAAC,EAAApE,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,GAAA,QAAAlC,EAAAf,UAAAgB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnB,UAAAmB,GAAA,OAAAL,EAAApE,OAAA0E,EAAA,EAAA1E,CAAAE,MAAAiE,EAAAnE,OAAA2E,EAAA,EAAA3E,CAAAuG,IAAA3B,KAAAvB,MAAAc,EAAA,CAAAjE,MAAAmC,OAAAkC,MACEoB,MAAQ,CACNzC,OAAQ,GACRF,MAAO,EACPwD,cAAe,KACfC,YAAa,KACbC,YAAa,MANjBtC,EAwBEW,WAAa,SAAAtF,GACX,IAAMkD,EAAQyB,EAAKuC,aAAalH,GAChC2E,EAAK6B,SAAS,CACZQ,YAAa9D,KA3BnByB,EA+BES,aAAe,SAAApF,GACb,IAAMkD,EAAQyB,EAAKuC,aAAalH,GAChC2E,EAAK6B,SAAS,CACZO,cAAe7D,KAlCrByB,EAsCEwC,mBAAqB,WACnBxC,EAAK6B,SAAS,CACZO,cAAe,QAxCrBpC,EA2CEyC,iBAAmB,WACjBzC,EAAK6B,SAAS,CACZQ,YAAa,QA7CnBrC,EAgDE0C,oBAAsB,WACpB1C,EAAK6B,SAAS,CACZ/C,OAAQkB,EAAKuB,MAAMzC,OAAO6D,OACxB,SAAAC,GAAC,OAAIA,EAAEvH,KAAO2E,EAAKuB,MAAMa,cAAc/G,KAEzC+G,cAAe,QArDrBpC,EAyDE6C,kBAAoB,SAAAtE,GAClByB,EAAK6B,SAAS,CACZS,YAAa/D,KA3DnByB,EA+DE8C,UAAY,WAEV,IAAMzH,EAAK2E,EAAKuB,MAAMe,YAAYjH,GAFlB0H,EAGkC/C,EAAKuB,MAAMe,YAArDhH,EAHQyH,EAGRzH,MAAOI,EAHCqH,EAGDrH,SAAUF,EAHTuH,EAGSvH,QAASC,EAHlBsH,EAGkBtH,MAAOF,EAHzBwH,EAGyBxH,KACnCgD,EAAQyB,EAAKuC,aAAalH,GAChCkD,EAAMjD,MAAQA,EACdiD,EAAM7C,SAAWA,EACjB6C,EAAM/C,QAAUA,EAChB+C,EAAMhD,KAAOA,EACbgD,EAAM9C,MAAQA,EAEduE,EAAK6B,SAAS,CAAEQ,YAAa,QA1EjCrC,EA6EEgD,UAAY,WACV,IAAMC,EAAW,IAAI7H,EAAM8H,cAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/CpE,EAAWkB,EAAKuB,MAAhBzC,OACRA,EAAOqE,KAAKF,GAEZjD,EAAK6B,SAAS,CAAEQ,YAAaY,EAAUnE,YAlF3CkB,EAAA,OAAApE,OAAAgF,EAAA,EAAAhF,CAAAuG,EAAArC,GAAAlE,OAAAG,EAAA,EAAAH,CAAAuG,EAAA,EAAAnG,IAAA,oBAAAC,MAAA,eAAAmH,EAAAxH,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAA8F,EAAAvE,EAAAF,EAAA,OAAAxB,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAWoCf,EAAcqG,YAXlD,OAAAD,EAAAvF,EAAAK,KAWYW,EAXZuE,EAWYvE,OAAQF,EAXpByE,EAWoBzE,MAEhB9C,KAAK+F,SAAS,CACZ/C,SACAF,UAfN,wBAAAd,EAAAkB,SAAAzB,EAAAzB,SAAA,yBAAAsH,EAAAnE,MAAAnD,KAAAoD,YAAA,KAAAlD,IAAA,eAAAC,MAAA,SAoBeZ,GACX,OAAOS,KAAKyF,MAAMzC,OAAOyE,KAAK,SAAAX,GAAC,OAAIA,EAAEvH,KAAOA,MArBhD,CAAAW,IAAA,SAAAC,MAAA,WAqFW,IAAAuH,EAAA1H,KAAA2H,EACiC3H,KAAKyF,MAArCa,EADDqB,EACCrB,cAAeC,EADhBoB,EACgBpB,YAEvB,OACExB,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,aACbF,EAAAxD,EAAAyD,cAAA,MAAIC,UAAU,SAAd,iBAEAF,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,iBAAiBI,QAASrF,KAAKkH,WAAjD,QAJJ,YAAA/E,OAQenC,KAAKyF,MAAM3C,MAR1B,WASEiC,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,wBACZjF,KAAKyF,MAAMzC,OAAOR,IAAI,SAAAC,GAAK,OAC1BsC,EAAAxD,EAAAyD,cAAC4C,EAAD,CACE1H,IAAKuC,EAAMlD,GACXkD,MAAOA,EACPkC,aAAc+C,EAAK/C,aACnBE,WAAY6C,EAAK7C,gBAItByB,GACCvB,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,mBACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,qBACfF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,cACbF,EAAAxD,EAAAyD,cAAA,WAASC,UAAU,mBAAnB,mCAAA9C,OACsCmE,EAAc9G,MADpD,OAGAuF,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,mBAChBF,EAAAxD,EAAAyD,cAAA,UACEC,UAAU,mBACVI,QAASrF,KAAK4G,qBAFhB,WAMA7B,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,SAASI,QAASrF,KAAK0G,oBAAzC,YAKJ3B,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,uBAAuB4C,aAAW,QAAQxC,QAASrF,KAAK0G,sBAG7EH,GACCxB,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,mBACbF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,qBACfF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,cACbF,EAAAxD,EAAAyD,cAAA,WAASC,UAAU,mBACjBF,EAAAxD,EAAAyD,cAAC8C,EAAD,CACErF,MAAO8D,EACPP,cAAehG,KAAK+G,qBAGxBhC,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,mBAChBF,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,oBAAoBI,QAASrF,KAAKgH,WAApD,gBAIAjC,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,SAASI,QAASrF,KAAK2G,kBAAzC,YAKJ5B,EAAAxD,EAAAyD,cAAA,UAAQC,UAAU,uBAAuB4C,aAAW,QAAQxC,QAASrF,KAAK2G,yBAtJtFN,EAAA,CAAoCf,IAAMC,WCW3BwC,0LAZX,OACEhD,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,OACbF,EAAAxD,EAAAyD,cAAA,WAASC,UAAU,WACjBF,EAAAxD,EAAAyD,cAAA,OAAKC,UAAU,aACbF,EAAAxD,EAAAyD,cAACgD,EAAD,gBANMzC,cCQE0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxD,EAAAxD,EAAAyD,cAACwD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aa980107.chunk.js","sourcesContent":["export class Movie {\n  constructor(id, title, year, runtime, genre, director, poster) {\n    this.id = id\n    this.title = title\n    this.year = year\n    this.runtime = runtime\n    this.genre = genre\n    this.director = director\n    this.poster = poster\n  }\n\n  niceTitle() {\n\n    const clean = this.title.replace(/[^A-Za-z0-9 .]/g, \"\")\n    const low = clean.toLowerCase().trim()\n    const nice = this.toTitleCase(low)\n\n    console.log({ title: this.title, clean, low, nice })\n    return nice\n  }\n\n  toTitleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n}\n","import axios from \"axios\"\nimport { Movie } from \"../models/Movie\"\n\nconst baseApi = \"http://www.omdbapi.com/\"\nconst apiKey = `2c7f5f8c`\n\nexport class MoviesService {\n  static async getMovies() {\n    const dummySearch = \"dad\"\n    const url = `${baseApi}?apiKey=${apiKey}&s=${dummySearch}`\n    const response = await axios(url)\n\n    const movieTasks = response.data.Search.map(movie =>\n      MoviesService.getMovieDetails(movie.imdbID)\n    )\n    const fullMovies = await Promise.all(movieTasks)\n\n    const result = {\n      count: response.data.totalResults,\n      movies: fullMovies\n    }\n\n    return result\n  }\n\n  static async getMovieDetails(id) {\n    const url = `${baseApi}?apiKey=${apiKey}&i=${id}`\n    const response = await axios(url)\n    return new Movie(\n      response.data.imdbID,\n      response.data.Title,\n      response.data.Year,\n      response.data.Runtime,\n      response.data.Genre,\n      response.data.Director,\n      response.data.Poster\n    )\n  }\n}\n","import React from \"react\"\n\nconst missingPicture =\n  \"https://www.nationalpetregister.org/assets/img/no-photo.jpg\"\n\nexport class MovieItem extends React.Component {\n  handleDelete = () => {\n    const { movie } = this.props\n    this.props.handleDelete(movie.id)\n  }\n\n  handleEdit = () => {\n    const { movie } = this.props\n    this.props.handleEdit(movie.id)\n  }\n\n  render() {\n    const { movie } = this.props\n    return (\n      <div className=\"column is-one-quarter\">\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <div className=\"image is-4by3\">\n              <img src={movie.poster || missingPicture} alt=\"movie\" />\n            </div>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media-content\">\n              <div className=\"title is-4\">{movie.niceTitle()}</div>\n              <div className=\"subtitle is-6\">{movie.director}</div>\n              <div className=\"subtitle is-6\">{movie.year}</div>\n            </div>\n          </div>\n          <div className=\"card-footer\">\n            <span className=\"icon\" onClick={this.handleEdit}>\n              <i className=\"fas fa-edit\" />\n            </span>\n            <span className=\"icon\" onClick={this.handleDelete}>\n              <i className=\"fas fa-trash\" />\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\n\nexport class MovieEditor extends React.Component {\n  state = {\n    movie: {}\n  }\n  componentDidMount() {\n    this.setState({ movie: { ...this.props.movie } })\n  }\n  handleFieldChange = fieldName => event => {\n    const movie = { ...this.state.movie }\n    movie[fieldName] = event.target.value\n    this.setState({ movie })\n    this.props.onMovieChange(movie)\n  }\n\n  render() {\n    const { movie } = this.state\n    return (\n      <div>\n        <h2 className=\"title\">Edit movie details</h2>\n        <div className=\"field\">\n          <label htmlFor=\"\" className=\"label\" >\n            Title\n          </label>\n          <div className=\"control\" >\n            <div>\n            </div>\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Title\"\n              value={movie.title}\n              onChange={this.handleFieldChange(\"title\")}\n            />\n\n          </div>\n\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"\" className=\"label\">\n            Director\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Director\"\n              value={movie.director}\n              onChange={this.handleFieldChange(\"director\")}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"\" className=\"label\">\n            Year\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Year\"\n              value={movie.year}\n              onChange={this.handleFieldChange(\"year\")}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"\" className=\"label\">\n            Genre\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Genre\"\n              value={movie.genre}\n              onChange={this.handleFieldChange(\"genre\")}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"\" className=\"label\">\n            Runtime\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Runtime\"\n              value={movie.runtime}\n              onChange={this.handleFieldChange(\"runtime\")}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { MoviesService } from \"../services/moviesService\"\nimport { MovieItem } from \"./MovieItem\"\nimport { MovieEditor } from \"./MovieEditor\"\nimport { Movie } from \"../models/Movie\"\nimport { ulid } from \"ulid\"\n\nexport class MoviesOverview extends React.Component {\n  state = {\n    movies: [],\n    count: 0,\n    movieToDelete: null,\n    movieToEdit: null,\n    editedMovie: null\n\n  }\n\n  async componentDidMount() {\n    const { movies, count } = await MoviesService.getMovies()\n\n    this.setState({\n      movies,\n      count,\n\n    })\n  }\n\n  getMovieById(id) {\n    return this.state.movies.find(t => t.id === id)\n  }\n\n  handleEdit = id => {\n    const movie = this.getMovieById(id)\n    this.setState({\n      movieToEdit: movie\n    })\n  }\n\n  handleDelete = id => {\n    const movie = this.getMovieById(id)\n    this.setState({\n      movieToDelete: movie\n    })\n  }\n\n  resetMovieToDelete = () => {\n    this.setState({\n      movieToDelete: null\n    })\n  }\n  resetMovieToEdit = () => {\n    this.setState({\n      movieToEdit: null\n    })\n  }\n  deleteSelectedMovie = () => {\n    this.setState({\n      movies: this.state.movies.filter(\n        t => t.id !== this.state.movieToDelete.id\n      ),\n      movieToDelete: null\n    })\n  }\n\n  handleMovieChange = movie => {\n    this.setState({\n      editedMovie: movie\n    })\n  }\n\n  saveMovie = () => {\n\n    const id = this.state.editedMovie.id\n    const { title, director, runtime, genre, year } = this.state.editedMovie\n    const movie = this.getMovieById(id)\n    movie.title = title\n    movie.director = director\n    movie.runtime = runtime\n    movie.year = year\n    movie.genre = genre\n\n    this.setState({ movieToEdit: null })\n  }\n\n  handleAdd = () => {\n    const newMovie = new Movie(ulid(), \"\", \"\", \"\", \"\", \"\", \"\")\n    const { movies } = this.state\n    movies.push(newMovie)\n\n    this.setState({ movieToEdit: newMovie, movies })\n  }\n\n  render() {\n    const { movieToDelete, movieToEdit, } = this.state\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Herolo Movies</h1>\n\n        <div>\n          <button className=\"button is-info\" onClick={this.handleAdd}>\n            Add\n          </button>\n        </div>\n        {`We found ${this.state.count} movies`}\n        <div className=\"columns is-multiline\">\n          {this.state.movies.map(movie => (\n            <MovieItem\n              key={movie.id}\n              movie={movie}\n              handleDelete={this.handleDelete}\n              handleEdit={this.handleEdit}\n            />\n          ))}\n        </div>\n        {movieToDelete && (\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\" />\n            <div className=\"modal-card\">\n              <section className=\"modal-card-body\">\n                {`Are you sure you want to delete ${movieToDelete.title} ?`}\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button\n                  className=\"button is-danger\"\n                  onClick={this.deleteSelectedMovie}\n                >\n                  Delete!\n                </button>\n                <button className=\"button\" onClick={this.resetMovieToDelete}>\n                  Cancel\n                </button>\n              </footer>\n            </div>\n            <button className=\"modal-close is-large\" aria-label=\"close\" onClick={this.resetMovieToDelete} />\n          </div>\n        )}\n        {movieToEdit && (\n          <div className=\"modal is-active\">\n            <div className=\"modal-background\" />\n            <div className=\"modal-card\">\n              <section className=\"modal-card-body\">\n                <MovieEditor\n                  movie={movieToEdit}\n                  onMovieChange={this.handleMovieChange}\n                />\n              </section>\n              <footer className=\"modal-card-foot\">\n                <button className=\"button is-success\" onClick={this.saveMovie}>\n\n                  Save changes\n                </button>\n                <button className=\"button\" onClick={this.resetMovieToEdit}>\n                  Cancel\n                </button>\n              </footer>\n            </div>\n            <button className=\"modal-close is-large\" aria-label=\"close\" onClick={this.resetMovieToEdit} />\n          </div>\n        )}\n\n\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { MoviesOverview } from \"./components/MoviesOverview\"\nimport \"./App.css\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <section className=\"section\">\n          <div className=\"container\">\n            <MoviesOverview />\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}